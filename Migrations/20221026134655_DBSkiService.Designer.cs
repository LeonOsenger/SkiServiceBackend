// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektarbeitBackend.Models;

#nullable disable

namespace SkiServiceBackend.Migrations
{
    [DbContext(typeof(SkiServiceContext))]
    [Migration("20221026134655_DBSkiService")]
    partial class DBSkiService
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjektarbeitBackend.Models.Dienstleistungen", b =>
                {
                    b.Property<int>("DienstleistungenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DienstleistungenId"), 1L, 1);

                    b.Property<string>("DienstleistungsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preis")
                        .HasColumnType("real");

                    b.HasKey("DienstleistungenId");

                    b.ToTable("serviceDienstleistungen");
                });

            modelBuilder.Entity("ProjektarbeitBackend.Models.Mitarbeiter", b =>
                {
                    b.Property<int>("MitarbeiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MitarbeiterId"), 1L, 1);

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MitarbeiterId");

                    b.ToTable("mitarbeiters");
                });

            modelBuilder.Entity("ProjektarbeitBackend.Models.MitarbeiterLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Benutzername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MitarbeiterId")
                        .HasColumnType("int");

                    b.Property<int>("Passwort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MitarbeiterId");

                    b.ToTable("mitarbeiterLogins");
                });

            modelBuilder.Entity("ProjektarbeitBackend.Models.ServiceAuftrag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Auftrags")
                        .HasColumnType("int");

                    b.Property<int>("DienstleistungenId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KundenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.Property<string>("priorität")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DienstleistungenId");

                    b.ToTable("serviceAuftrag");
                });

            modelBuilder.Entity("ProjektarbeitBackend.Models.MitarbeiterLogin", b =>
                {
                    b.HasOne("ProjektarbeitBackend.Models.Mitarbeiter", "Mitarbeiter")
                        .WithMany()
                        .HasForeignKey("MitarbeiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mitarbeiter");
                });

            modelBuilder.Entity("ProjektarbeitBackend.Models.ServiceAuftrag", b =>
                {
                    b.HasOne("ProjektarbeitBackend.Models.Dienstleistungen", "Dienstleistung")
                        .WithMany()
                        .HasForeignKey("DienstleistungenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dienstleistung");
                });
#pragma warning restore 612, 618
        }
    }
}
